// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: logistics/v1/despatchadvice.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	DespatchAdviceService_CreateDespatchAdvice_FullMethodName                     = "/logistics.v1.DespatchAdviceService/CreateDespatchAdvice"
	DespatchAdviceService_GetDespatchAdvices_FullMethodName                       = "/logistics.v1.DespatchAdviceService/GetDespatchAdvices"
	DespatchAdviceService_GetDespatchAdvice_FullMethodName                        = "/logistics.v1.DespatchAdviceService/GetDespatchAdvice"
	DespatchAdviceService_GetDespatchAdviceByPk_FullMethodName                    = "/logistics.v1.DespatchAdviceService/GetDespatchAdviceByPk"
	DespatchAdviceService_UpdateDespatchAdvice_FullMethodName                     = "/logistics.v1.DespatchAdviceService/UpdateDespatchAdvice"
	DespatchAdviceService_CreateDespatchAdviceLineItem_FullMethodName             = "/logistics.v1.DespatchAdviceService/CreateDespatchAdviceLineItem"
	DespatchAdviceService_GetDespatchAdviceLineItems_FullMethodName               = "/logistics.v1.DespatchAdviceService/GetDespatchAdviceLineItems"
	DespatchAdviceService_CreateDespatchAdviceItemTotal_FullMethodName            = "/logistics.v1.DespatchAdviceService/CreateDespatchAdviceItemTotal"
	DespatchAdviceService_CreateDespatchAdviceLogisticUnit_FullMethodName         = "/logistics.v1.DespatchAdviceService/CreateDespatchAdviceLogisticUnit"
	DespatchAdviceService_CreateDespatchAdviceQuantityVariance_FullMethodName     = "/logistics.v1.DespatchAdviceService/CreateDespatchAdviceQuantityVariance"
	DespatchAdviceService_CreateDespatchAdviceTotal_FullMethodName                = "/logistics.v1.DespatchAdviceService/CreateDespatchAdviceTotal"
	DespatchAdviceService_CreateDespatchAdviceTransportInformation_FullMethodName = "/logistics.v1.DespatchAdviceService/CreateDespatchAdviceTransportInformation"
	DespatchAdviceService_CreateDespatchInformation_FullMethodName                = "/logistics.v1.DespatchAdviceService/CreateDespatchInformation"
)

// DespatchAdviceServiceClient is the client API for DespatchAdviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// The DespatchAdviceService service definition.
type DespatchAdviceServiceClient interface {
	CreateDespatchAdvice(ctx context.Context, in *CreateDespatchAdviceRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceResponse, error)
	GetDespatchAdvices(ctx context.Context, in *GetDespatchAdvicesRequest, opts ...grpc.CallOption) (*GetDespatchAdvicesResponse, error)
	GetDespatchAdvice(ctx context.Context, in *GetDespatchAdviceRequest, opts ...grpc.CallOption) (*GetDespatchAdviceResponse, error)
	GetDespatchAdviceByPk(ctx context.Context, in *GetDespatchAdviceByPkRequest, opts ...grpc.CallOption) (*GetDespatchAdviceByPkResponse, error)
	UpdateDespatchAdvice(ctx context.Context, in *UpdateDespatchAdviceRequest, opts ...grpc.CallOption) (*UpdateDespatchAdviceResponse, error)
	CreateDespatchAdviceLineItem(ctx context.Context, in *CreateDespatchAdviceLineItemRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceLineItemResponse, error)
	GetDespatchAdviceLineItems(ctx context.Context, in *GetDespatchAdviceLineItemsRequest, opts ...grpc.CallOption) (*GetDespatchAdviceLineItemsResponse, error)
	CreateDespatchAdviceItemTotal(ctx context.Context, in *CreateDespatchAdviceItemTotalRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceItemTotalResponse, error)
	CreateDespatchAdviceLogisticUnit(ctx context.Context, in *CreateDespatchAdviceLogisticUnitRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceLogisticUnitResponse, error)
	CreateDespatchAdviceQuantityVariance(ctx context.Context, in *CreateDespatchAdviceQuantityVarianceRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceQuantityVarianceResponse, error)
	CreateDespatchAdviceTotal(ctx context.Context, in *CreateDespatchAdviceTotalRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceTotalResponse, error)
	CreateDespatchAdviceTransportInformation(ctx context.Context, in *CreateDespatchAdviceTransportInformationRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceTransportInformationResponse, error)
	CreateDespatchInformation(ctx context.Context, in *CreateDespatchInformationRequest, opts ...grpc.CallOption) (*CreateDespatchInformationResponse, error)
}

type despatchAdviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDespatchAdviceServiceClient(cc grpc.ClientConnInterface) DespatchAdviceServiceClient {
	return &despatchAdviceServiceClient{cc}
}

func (c *despatchAdviceServiceClient) CreateDespatchAdvice(ctx context.Context, in *CreateDespatchAdviceRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdvice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) GetDespatchAdvices(ctx context.Context, in *GetDespatchAdvicesRequest, opts ...grpc.CallOption) (*GetDespatchAdvicesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDespatchAdvicesResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_GetDespatchAdvices_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) GetDespatchAdvice(ctx context.Context, in *GetDespatchAdviceRequest, opts ...grpc.CallOption) (*GetDespatchAdviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDespatchAdviceResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_GetDespatchAdvice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) GetDespatchAdviceByPk(ctx context.Context, in *GetDespatchAdviceByPkRequest, opts ...grpc.CallOption) (*GetDespatchAdviceByPkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDespatchAdviceByPkResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_GetDespatchAdviceByPk_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) UpdateDespatchAdvice(ctx context.Context, in *UpdateDespatchAdviceRequest, opts ...grpc.CallOption) (*UpdateDespatchAdviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateDespatchAdviceResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_UpdateDespatchAdvice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchAdviceLineItem(ctx context.Context, in *CreateDespatchAdviceLineItemRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceLineItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceLineItemResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdviceLineItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) GetDespatchAdviceLineItems(ctx context.Context, in *GetDespatchAdviceLineItemsRequest, opts ...grpc.CallOption) (*GetDespatchAdviceLineItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDespatchAdviceLineItemsResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_GetDespatchAdviceLineItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchAdviceItemTotal(ctx context.Context, in *CreateDespatchAdviceItemTotalRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceItemTotalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceItemTotalResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdviceItemTotal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchAdviceLogisticUnit(ctx context.Context, in *CreateDespatchAdviceLogisticUnitRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceLogisticUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceLogisticUnitResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdviceLogisticUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchAdviceQuantityVariance(ctx context.Context, in *CreateDespatchAdviceQuantityVarianceRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceQuantityVarianceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceQuantityVarianceResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdviceQuantityVariance_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchAdviceTotal(ctx context.Context, in *CreateDespatchAdviceTotalRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceTotalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceTotalResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdviceTotal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchAdviceTransportInformation(ctx context.Context, in *CreateDespatchAdviceTransportInformationRequest, opts ...grpc.CallOption) (*CreateDespatchAdviceTransportInformationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchAdviceTransportInformationResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchAdviceTransportInformation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *despatchAdviceServiceClient) CreateDespatchInformation(ctx context.Context, in *CreateDespatchInformationRequest, opts ...grpc.CallOption) (*CreateDespatchInformationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDespatchInformationResponse)
	err := c.cc.Invoke(ctx, DespatchAdviceService_CreateDespatchInformation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DespatchAdviceServiceServer is the server API for DespatchAdviceService service.
// All implementations must embed UnimplementedDespatchAdviceServiceServer
// for forward compatibility.
//
// The DespatchAdviceService service definition.
type DespatchAdviceServiceServer interface {
	CreateDespatchAdvice(context.Context, *CreateDespatchAdviceRequest) (*CreateDespatchAdviceResponse, error)
	GetDespatchAdvices(context.Context, *GetDespatchAdvicesRequest) (*GetDespatchAdvicesResponse, error)
	GetDespatchAdvice(context.Context, *GetDespatchAdviceRequest) (*GetDespatchAdviceResponse, error)
	GetDespatchAdviceByPk(context.Context, *GetDespatchAdviceByPkRequest) (*GetDespatchAdviceByPkResponse, error)
	UpdateDespatchAdvice(context.Context, *UpdateDespatchAdviceRequest) (*UpdateDespatchAdviceResponse, error)
	CreateDespatchAdviceLineItem(context.Context, *CreateDespatchAdviceLineItemRequest) (*CreateDespatchAdviceLineItemResponse, error)
	GetDespatchAdviceLineItems(context.Context, *GetDespatchAdviceLineItemsRequest) (*GetDespatchAdviceLineItemsResponse, error)
	CreateDespatchAdviceItemTotal(context.Context, *CreateDespatchAdviceItemTotalRequest) (*CreateDespatchAdviceItemTotalResponse, error)
	CreateDespatchAdviceLogisticUnit(context.Context, *CreateDespatchAdviceLogisticUnitRequest) (*CreateDespatchAdviceLogisticUnitResponse, error)
	CreateDespatchAdviceQuantityVariance(context.Context, *CreateDespatchAdviceQuantityVarianceRequest) (*CreateDespatchAdviceQuantityVarianceResponse, error)
	CreateDespatchAdviceTotal(context.Context, *CreateDespatchAdviceTotalRequest) (*CreateDespatchAdviceTotalResponse, error)
	CreateDespatchAdviceTransportInformation(context.Context, *CreateDespatchAdviceTransportInformationRequest) (*CreateDespatchAdviceTransportInformationResponse, error)
	CreateDespatchInformation(context.Context, *CreateDespatchInformationRequest) (*CreateDespatchInformationResponse, error)
	mustEmbedUnimplementedDespatchAdviceServiceServer()
}

// UnimplementedDespatchAdviceServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDespatchAdviceServiceServer struct{}

func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdvice(context.Context, *CreateDespatchAdviceRequest) (*CreateDespatchAdviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdvice not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) GetDespatchAdvices(context.Context, *GetDespatchAdvicesRequest) (*GetDespatchAdvicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDespatchAdvices not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) GetDespatchAdvice(context.Context, *GetDespatchAdviceRequest) (*GetDespatchAdviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDespatchAdvice not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) GetDespatchAdviceByPk(context.Context, *GetDespatchAdviceByPkRequest) (*GetDespatchAdviceByPkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDespatchAdviceByPk not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) UpdateDespatchAdvice(context.Context, *UpdateDespatchAdviceRequest) (*UpdateDespatchAdviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDespatchAdvice not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdviceLineItem(context.Context, *CreateDespatchAdviceLineItemRequest) (*CreateDespatchAdviceLineItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdviceLineItem not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) GetDespatchAdviceLineItems(context.Context, *GetDespatchAdviceLineItemsRequest) (*GetDespatchAdviceLineItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDespatchAdviceLineItems not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdviceItemTotal(context.Context, *CreateDespatchAdviceItemTotalRequest) (*CreateDespatchAdviceItemTotalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdviceItemTotal not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdviceLogisticUnit(context.Context, *CreateDespatchAdviceLogisticUnitRequest) (*CreateDespatchAdviceLogisticUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdviceLogisticUnit not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdviceQuantityVariance(context.Context, *CreateDespatchAdviceQuantityVarianceRequest) (*CreateDespatchAdviceQuantityVarianceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdviceQuantityVariance not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdviceTotal(context.Context, *CreateDespatchAdviceTotalRequest) (*CreateDespatchAdviceTotalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdviceTotal not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchAdviceTransportInformation(context.Context, *CreateDespatchAdviceTransportInformationRequest) (*CreateDespatchAdviceTransportInformationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchAdviceTransportInformation not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) CreateDespatchInformation(context.Context, *CreateDespatchInformationRequest) (*CreateDespatchInformationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDespatchInformation not implemented")
}
func (UnimplementedDespatchAdviceServiceServer) mustEmbedUnimplementedDespatchAdviceServiceServer() {}
func (UnimplementedDespatchAdviceServiceServer) testEmbeddedByValue()                               {}

// UnsafeDespatchAdviceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DespatchAdviceServiceServer will
// result in compilation errors.
type UnsafeDespatchAdviceServiceServer interface {
	mustEmbedUnimplementedDespatchAdviceServiceServer()
}

func RegisterDespatchAdviceServiceServer(s grpc.ServiceRegistrar, srv DespatchAdviceServiceServer) {
	// If the following call pancis, it indicates UnimplementedDespatchAdviceServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&DespatchAdviceService_ServiceDesc, srv)
}

func _DespatchAdviceService_CreateDespatchAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdvice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdvice(ctx, req.(*CreateDespatchAdviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_GetDespatchAdvices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDespatchAdvicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdvices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_GetDespatchAdvices_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdvices(ctx, req.(*GetDespatchAdvicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_GetDespatchAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDespatchAdviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_GetDespatchAdvice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdvice(ctx, req.(*GetDespatchAdviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_GetDespatchAdviceByPk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDespatchAdviceByPkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdviceByPk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_GetDespatchAdviceByPk_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdviceByPk(ctx, req.(*GetDespatchAdviceByPkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_UpdateDespatchAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDespatchAdviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).UpdateDespatchAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_UpdateDespatchAdvice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).UpdateDespatchAdvice(ctx, req.(*UpdateDespatchAdviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchAdviceLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdviceLineItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceLineItem(ctx, req.(*CreateDespatchAdviceLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_GetDespatchAdviceLineItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDespatchAdviceLineItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdviceLineItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_GetDespatchAdviceLineItems_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).GetDespatchAdviceLineItems(ctx, req.(*GetDespatchAdviceLineItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchAdviceItemTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceItemTotalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceItemTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdviceItemTotal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceItemTotal(ctx, req.(*CreateDespatchAdviceItemTotalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchAdviceLogisticUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceLogisticUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceLogisticUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdviceLogisticUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceLogisticUnit(ctx, req.(*CreateDespatchAdviceLogisticUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchAdviceQuantityVariance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceQuantityVarianceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceQuantityVariance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdviceQuantityVariance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceQuantityVariance(ctx, req.(*CreateDespatchAdviceQuantityVarianceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchAdviceTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceTotalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdviceTotal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceTotal(ctx, req.(*CreateDespatchAdviceTotalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchAdviceTransportInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchAdviceTransportInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceTransportInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchAdviceTransportInformation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchAdviceTransportInformation(ctx, req.(*CreateDespatchAdviceTransportInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DespatchAdviceService_CreateDespatchInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDespatchInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DespatchAdviceServiceServer).CreateDespatchInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DespatchAdviceService_CreateDespatchInformation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DespatchAdviceServiceServer).CreateDespatchInformation(ctx, req.(*CreateDespatchInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DespatchAdviceService_ServiceDesc is the grpc.ServiceDesc for DespatchAdviceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DespatchAdviceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "logistics.v1.DespatchAdviceService",
	HandlerType: (*DespatchAdviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDespatchAdvice",
			Handler:    _DespatchAdviceService_CreateDespatchAdvice_Handler,
		},
		{
			MethodName: "GetDespatchAdvices",
			Handler:    _DespatchAdviceService_GetDespatchAdvices_Handler,
		},
		{
			MethodName: "GetDespatchAdvice",
			Handler:    _DespatchAdviceService_GetDespatchAdvice_Handler,
		},
		{
			MethodName: "GetDespatchAdviceByPk",
			Handler:    _DespatchAdviceService_GetDespatchAdviceByPk_Handler,
		},
		{
			MethodName: "UpdateDespatchAdvice",
			Handler:    _DespatchAdviceService_UpdateDespatchAdvice_Handler,
		},
		{
			MethodName: "CreateDespatchAdviceLineItem",
			Handler:    _DespatchAdviceService_CreateDespatchAdviceLineItem_Handler,
		},
		{
			MethodName: "GetDespatchAdviceLineItems",
			Handler:    _DespatchAdviceService_GetDespatchAdviceLineItems_Handler,
		},
		{
			MethodName: "CreateDespatchAdviceItemTotal",
			Handler:    _DespatchAdviceService_CreateDespatchAdviceItemTotal_Handler,
		},
		{
			MethodName: "CreateDespatchAdviceLogisticUnit",
			Handler:    _DespatchAdviceService_CreateDespatchAdviceLogisticUnit_Handler,
		},
		{
			MethodName: "CreateDespatchAdviceQuantityVariance",
			Handler:    _DespatchAdviceService_CreateDespatchAdviceQuantityVariance_Handler,
		},
		{
			MethodName: "CreateDespatchAdviceTotal",
			Handler:    _DespatchAdviceService_CreateDespatchAdviceTotal_Handler,
		},
		{
			MethodName: "CreateDespatchAdviceTransportInformation",
			Handler:    _DespatchAdviceService_CreateDespatchAdviceTransportInformation_Handler,
		},
		{
			MethodName: "CreateDespatchInformation",
			Handler:    _DespatchAdviceService_CreateDespatchInformation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logistics/v1/despatchadvice.proto",
}
