// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: invoice/v1/debitcreditadvice.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	DebitCreditAdviceService_CreateDebitCreditAdvice_FullMethodName               = "/invoice.v1.DebitCreditAdviceService/CreateDebitCreditAdvice"
	DebitCreditAdviceService_GetDebitCreditAdvices_FullMethodName                 = "/invoice.v1.DebitCreditAdviceService/GetDebitCreditAdvices"
	DebitCreditAdviceService_GetDebitCreditAdvice_FullMethodName                  = "/invoice.v1.DebitCreditAdviceService/GetDebitCreditAdvice"
	DebitCreditAdviceService_GetDebitCreditAdviceByPk_FullMethodName              = "/invoice.v1.DebitCreditAdviceService/GetDebitCreditAdviceByPk"
	DebitCreditAdviceService_UpdateDebitCreditAdvice_FullMethodName               = "/invoice.v1.DebitCreditAdviceService/UpdateDebitCreditAdvice"
	DebitCreditAdviceService_CreateDebitCreditAdviceLineItem_FullMethodName       = "/invoice.v1.DebitCreditAdviceService/CreateDebitCreditAdviceLineItem"
	DebitCreditAdviceService_GetDebitCreditAdviceLineItems_FullMethodName         = "/invoice.v1.DebitCreditAdviceService/GetDebitCreditAdviceLineItems"
	DebitCreditAdviceService_CreateDebitCreditAdviceLineItemDetail_FullMethodName = "/invoice.v1.DebitCreditAdviceService/CreateDebitCreditAdviceLineItemDetail"
)

// DebitCreditAdviceServiceClient is the client API for DebitCreditAdviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// The DebitCreditAdviceService service definition.
type DebitCreditAdviceServiceClient interface {
	CreateDebitCreditAdvice(ctx context.Context, in *CreateDebitCreditAdviceRequest, opts ...grpc.CallOption) (*CreateDebitCreditAdviceResponse, error)
	GetDebitCreditAdvices(ctx context.Context, in *GetDebitCreditAdvicesRequest, opts ...grpc.CallOption) (*GetDebitCreditAdvicesResponse, error)
	GetDebitCreditAdvice(ctx context.Context, in *GetDebitCreditAdviceRequest, opts ...grpc.CallOption) (*GetDebitCreditAdviceResponse, error)
	GetDebitCreditAdviceByPk(ctx context.Context, in *GetDebitCreditAdviceByPkRequest, opts ...grpc.CallOption) (*GetDebitCreditAdviceByPkResponse, error)
	UpdateDebitCreditAdvice(ctx context.Context, in *UpdateDebitCreditAdviceRequest, opts ...grpc.CallOption) (*UpdateDebitCreditAdviceResponse, error)
	CreateDebitCreditAdviceLineItem(ctx context.Context, in *CreateDebitCreditAdviceLineItemRequest, opts ...grpc.CallOption) (*CreateDebitCreditAdviceLineItemResponse, error)
	GetDebitCreditAdviceLineItems(ctx context.Context, in *GetDebitCreditAdviceLineItemsRequest, opts ...grpc.CallOption) (*GetDebitCreditAdviceLineItemsResponse, error)
	CreateDebitCreditAdviceLineItemDetail(ctx context.Context, in *CreateDebitCreditAdviceLineItemDetailRequest, opts ...grpc.CallOption) (*CreateDebitCreditAdviceLineItemDetailResponse, error)
}

type debitCreditAdviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDebitCreditAdviceServiceClient(cc grpc.ClientConnInterface) DebitCreditAdviceServiceClient {
	return &debitCreditAdviceServiceClient{cc}
}

func (c *debitCreditAdviceServiceClient) CreateDebitCreditAdvice(ctx context.Context, in *CreateDebitCreditAdviceRequest, opts ...grpc.CallOption) (*CreateDebitCreditAdviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDebitCreditAdviceResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_CreateDebitCreditAdvice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) GetDebitCreditAdvices(ctx context.Context, in *GetDebitCreditAdvicesRequest, opts ...grpc.CallOption) (*GetDebitCreditAdvicesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDebitCreditAdvicesResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_GetDebitCreditAdvices_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) GetDebitCreditAdvice(ctx context.Context, in *GetDebitCreditAdviceRequest, opts ...grpc.CallOption) (*GetDebitCreditAdviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDebitCreditAdviceResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_GetDebitCreditAdvice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) GetDebitCreditAdviceByPk(ctx context.Context, in *GetDebitCreditAdviceByPkRequest, opts ...grpc.CallOption) (*GetDebitCreditAdviceByPkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDebitCreditAdviceByPkResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_GetDebitCreditAdviceByPk_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) UpdateDebitCreditAdvice(ctx context.Context, in *UpdateDebitCreditAdviceRequest, opts ...grpc.CallOption) (*UpdateDebitCreditAdviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateDebitCreditAdviceResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_UpdateDebitCreditAdvice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) CreateDebitCreditAdviceLineItem(ctx context.Context, in *CreateDebitCreditAdviceLineItemRequest, opts ...grpc.CallOption) (*CreateDebitCreditAdviceLineItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDebitCreditAdviceLineItemResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_CreateDebitCreditAdviceLineItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) GetDebitCreditAdviceLineItems(ctx context.Context, in *GetDebitCreditAdviceLineItemsRequest, opts ...grpc.CallOption) (*GetDebitCreditAdviceLineItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDebitCreditAdviceLineItemsResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_GetDebitCreditAdviceLineItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debitCreditAdviceServiceClient) CreateDebitCreditAdviceLineItemDetail(ctx context.Context, in *CreateDebitCreditAdviceLineItemDetailRequest, opts ...grpc.CallOption) (*CreateDebitCreditAdviceLineItemDetailResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDebitCreditAdviceLineItemDetailResponse)
	err := c.cc.Invoke(ctx, DebitCreditAdviceService_CreateDebitCreditAdviceLineItemDetail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebitCreditAdviceServiceServer is the server API for DebitCreditAdviceService service.
// All implementations must embed UnimplementedDebitCreditAdviceServiceServer
// for forward compatibility.
//
// The DebitCreditAdviceService service definition.
type DebitCreditAdviceServiceServer interface {
	CreateDebitCreditAdvice(context.Context, *CreateDebitCreditAdviceRequest) (*CreateDebitCreditAdviceResponse, error)
	GetDebitCreditAdvices(context.Context, *GetDebitCreditAdvicesRequest) (*GetDebitCreditAdvicesResponse, error)
	GetDebitCreditAdvice(context.Context, *GetDebitCreditAdviceRequest) (*GetDebitCreditAdviceResponse, error)
	GetDebitCreditAdviceByPk(context.Context, *GetDebitCreditAdviceByPkRequest) (*GetDebitCreditAdviceByPkResponse, error)
	UpdateDebitCreditAdvice(context.Context, *UpdateDebitCreditAdviceRequest) (*UpdateDebitCreditAdviceResponse, error)
	CreateDebitCreditAdviceLineItem(context.Context, *CreateDebitCreditAdviceLineItemRequest) (*CreateDebitCreditAdviceLineItemResponse, error)
	GetDebitCreditAdviceLineItems(context.Context, *GetDebitCreditAdviceLineItemsRequest) (*GetDebitCreditAdviceLineItemsResponse, error)
	CreateDebitCreditAdviceLineItemDetail(context.Context, *CreateDebitCreditAdviceLineItemDetailRequest) (*CreateDebitCreditAdviceLineItemDetailResponse, error)
	mustEmbedUnimplementedDebitCreditAdviceServiceServer()
}

// UnimplementedDebitCreditAdviceServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDebitCreditAdviceServiceServer struct{}

func (UnimplementedDebitCreditAdviceServiceServer) CreateDebitCreditAdvice(context.Context, *CreateDebitCreditAdviceRequest) (*CreateDebitCreditAdviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDebitCreditAdvice not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) GetDebitCreditAdvices(context.Context, *GetDebitCreditAdvicesRequest) (*GetDebitCreditAdvicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDebitCreditAdvices not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) GetDebitCreditAdvice(context.Context, *GetDebitCreditAdviceRequest) (*GetDebitCreditAdviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDebitCreditAdvice not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) GetDebitCreditAdviceByPk(context.Context, *GetDebitCreditAdviceByPkRequest) (*GetDebitCreditAdviceByPkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDebitCreditAdviceByPk not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) UpdateDebitCreditAdvice(context.Context, *UpdateDebitCreditAdviceRequest) (*UpdateDebitCreditAdviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDebitCreditAdvice not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) CreateDebitCreditAdviceLineItem(context.Context, *CreateDebitCreditAdviceLineItemRequest) (*CreateDebitCreditAdviceLineItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDebitCreditAdviceLineItem not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) GetDebitCreditAdviceLineItems(context.Context, *GetDebitCreditAdviceLineItemsRequest) (*GetDebitCreditAdviceLineItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDebitCreditAdviceLineItems not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) CreateDebitCreditAdviceLineItemDetail(context.Context, *CreateDebitCreditAdviceLineItemDetailRequest) (*CreateDebitCreditAdviceLineItemDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDebitCreditAdviceLineItemDetail not implemented")
}
func (UnimplementedDebitCreditAdviceServiceServer) mustEmbedUnimplementedDebitCreditAdviceServiceServer() {
}
func (UnimplementedDebitCreditAdviceServiceServer) testEmbeddedByValue() {}

// UnsafeDebitCreditAdviceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DebitCreditAdviceServiceServer will
// result in compilation errors.
type UnsafeDebitCreditAdviceServiceServer interface {
	mustEmbedUnimplementedDebitCreditAdviceServiceServer()
}

func RegisterDebitCreditAdviceServiceServer(s grpc.ServiceRegistrar, srv DebitCreditAdviceServiceServer) {
	// If the following call pancis, it indicates UnimplementedDebitCreditAdviceServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&DebitCreditAdviceService_ServiceDesc, srv)
}

func _DebitCreditAdviceService_CreateDebitCreditAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDebitCreditAdviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).CreateDebitCreditAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_CreateDebitCreditAdvice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).CreateDebitCreditAdvice(ctx, req.(*CreateDebitCreditAdviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_GetDebitCreditAdvices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDebitCreditAdvicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdvices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_GetDebitCreditAdvices_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdvices(ctx, req.(*GetDebitCreditAdvicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_GetDebitCreditAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDebitCreditAdviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_GetDebitCreditAdvice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdvice(ctx, req.(*GetDebitCreditAdviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_GetDebitCreditAdviceByPk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDebitCreditAdviceByPkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdviceByPk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_GetDebitCreditAdviceByPk_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdviceByPk(ctx, req.(*GetDebitCreditAdviceByPkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_UpdateDebitCreditAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDebitCreditAdviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).UpdateDebitCreditAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_UpdateDebitCreditAdvice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).UpdateDebitCreditAdvice(ctx, req.(*UpdateDebitCreditAdviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_CreateDebitCreditAdviceLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDebitCreditAdviceLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).CreateDebitCreditAdviceLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_CreateDebitCreditAdviceLineItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).CreateDebitCreditAdviceLineItem(ctx, req.(*CreateDebitCreditAdviceLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_GetDebitCreditAdviceLineItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDebitCreditAdviceLineItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdviceLineItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_GetDebitCreditAdviceLineItems_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).GetDebitCreditAdviceLineItems(ctx, req.(*GetDebitCreditAdviceLineItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebitCreditAdviceService_CreateDebitCreditAdviceLineItemDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDebitCreditAdviceLineItemDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebitCreditAdviceServiceServer).CreateDebitCreditAdviceLineItemDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DebitCreditAdviceService_CreateDebitCreditAdviceLineItemDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebitCreditAdviceServiceServer).CreateDebitCreditAdviceLineItemDetail(ctx, req.(*CreateDebitCreditAdviceLineItemDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DebitCreditAdviceService_ServiceDesc is the grpc.ServiceDesc for DebitCreditAdviceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DebitCreditAdviceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "invoice.v1.DebitCreditAdviceService",
	HandlerType: (*DebitCreditAdviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDebitCreditAdvice",
			Handler:    _DebitCreditAdviceService_CreateDebitCreditAdvice_Handler,
		},
		{
			MethodName: "GetDebitCreditAdvices",
			Handler:    _DebitCreditAdviceService_GetDebitCreditAdvices_Handler,
		},
		{
			MethodName: "GetDebitCreditAdvice",
			Handler:    _DebitCreditAdviceService_GetDebitCreditAdvice_Handler,
		},
		{
			MethodName: "GetDebitCreditAdviceByPk",
			Handler:    _DebitCreditAdviceService_GetDebitCreditAdviceByPk_Handler,
		},
		{
			MethodName: "UpdateDebitCreditAdvice",
			Handler:    _DebitCreditAdviceService_UpdateDebitCreditAdvice_Handler,
		},
		{
			MethodName: "CreateDebitCreditAdviceLineItem",
			Handler:    _DebitCreditAdviceService_CreateDebitCreditAdviceLineItem_Handler,
		},
		{
			MethodName: "GetDebitCreditAdviceLineItems",
			Handler:    _DebitCreditAdviceService_GetDebitCreditAdviceLineItems_Handler,
		},
		{
			MethodName: "CreateDebitCreditAdviceLineItemDetail",
			Handler:    _DebitCreditAdviceService_CreateDebitCreditAdviceLineItemDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "invoice/v1/debitcreditadvice.proto",
}
